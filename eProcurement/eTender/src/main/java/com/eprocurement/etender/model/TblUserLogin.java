/*
 * Created on 8 Nov 2016 ( Time 18:01:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.eprocurement.etender.model;

import java.io.Serializable;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "tbl_userlogin"
 *
 *
 */

@Entity
@Table(name="tbl_userlogin")
// Define named queries here

public class TblUserLogin implements Serializable {

    private static final long serialVersionUID = 1L;
    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    private Long       userId           ;
    private Integer    createdby    ;
    private Date       datecreated  ;
    private Date       datemodified ;
    private int    failedattempt ;
    private String     loginid      ;
    private Integer    modifiedby   ;
    private String     password     ;
    private String     salt         ;
    private Integer    cstatus       ;
    private TblDesignation tblDesignation;
    private Integer userType;
    private String forgotpwdHash;
    private Date forgotpwdExpiryDate;
    private int isCTPLUser=0;
    private int isOrgenizationUser=0;
    private int timezoneId;
    private Date lastLogin;
    private int isFirstLogin;
    

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------


//    @ONETOMANY(MAPPEDBY="TBLUSERLOGIN", TARGETENTITY=TBLOFFICER.CLASS)
//    private List<TblOfficer> listOfTblOfficer;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    
    
    
    
    @Column(name="timezoneId")
    public int getTimezoneId() {
		return timezoneId;
	}

    @Column(name="isFirstLogin")
    public int getIsFirstLogin() {
		return isFirstLogin;
	}

	public void setIsFirstLogin(int isFirstLogin) {
		this.isFirstLogin = isFirstLogin;
	}

	public void setTimezoneId(int timezoneId) {
		this.timezoneId = timezoneId;
	}

	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="lastLogin")
	public Date getLastLogin() {
		return lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	@Column(name="isCTPLUser")
    public int getIsCTPLUser() {
		return isCTPLUser;
	}

	public void setIsCTPLUser(int isCTPLUser) {
		this.isCTPLUser = isCTPLUser;
	}
	@Column(name="isOrgenizationUser")
	public int getIsOrgenizationUser() {
		return isOrgenizationUser;
	}

	public void setIsOrgenizationUser(int isOrgenizationUser) {
		this.isOrgenizationUser = isOrgenizationUser;
	}

	@OneToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="designationId")
    public TblDesignation getTblDesignation() {
		return tblDesignation;
	}

	public void setTblDesignation(TblDesignation tblDesignation) {
		this.tblDesignation = tblDesignation;
	}

	public TblUserLogin(int i) {
    	this.userId = (long) i ;
    }
	public TblUserLogin(long i) {
    	this.userId =  i ;
    }
    public TblUserLogin() {
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUserId( Long userId ) {
        this.userId = userId ;
    }
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="userId")
    public Long getUserId() {
        return this.userId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : createdby ( INT ) 
    public void setCreatedby( Integer createdby ) {
        this.createdby = createdby;
    }
    @Column(name="createdby")
    public Integer getCreatedby() {
        return this.createdby;
    }

    //--- DATABASE MAPPING : datecreated ( DATETIME ) 
    public void setDatecreated( Date datecreated ) {
        this.datecreated = datecreated;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="datecreated",updatable=false,insertable=false)
    public Date getDatecreated() {
        return this.datecreated;
    }

    //--- DATABASE MAPPING : datemodified ( DATETIME ) 
    public void setDatemodified( Date datemodified ) {
        this.datemodified = datemodified;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="datemodified",updatable=false,insertable=false)
    public Date getDatemodified() {
        return this.datemodified;
    }

    //--- DATABASE MAPPING : failedattempt ( INT ) 
    public void setFailedattempt( int failedattempt ) {
        this.failedattempt = failedattempt;
    }
    @Column(name="failedattempt")
    public int getFailedattempt() {
        return this.failedattempt;
    }

    //--- DATABASE MAPPING : loginid ( LONGTEXT ) 
    public void setLoginid( String loginid ) {
        this.loginid = loginid;
    }
    @Column(name="loginid")
    public String getLoginid() {
        return this.loginid;
    }

    //--- DATABASE MAPPING : modifiedby ( INT ) 
    public void setModifiedby( Integer modifiedby ) {
        this.modifiedby = modifiedby;
    }
    @Column(name="modifiedby")
    public Integer getModifiedby() {
        return this.modifiedby;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    @Column(name="password", length=255)
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : salt ( VARCHAR ) 
    public void setSalt( String salt ) {
        this.salt = salt;
    }
    @Column(name="salt", length=250)
    public String getSalt() {
        return this.salt;
    }

    
    @Column(name="cstatus")
	public Integer getCstatus() {
		return cstatus;
	}

	public void setCstatus(Integer cstatus) {
		this.cstatus = cstatus;
	}
	
	@Column(name="userType")
	public Integer getUserType() {
		return userType;
	}

	public void setUserType(Integer userType) {
		this.userType = userType;
	}
	
	

    //--- DATABASE MAPPING : status ( INT ) 
	@Column(name="forgotpwdHash")
	public String getForgotpwdHash() {
		return forgotpwdHash;
	}

	public void setForgotpwdHash(String forgotpwdHash) {
		this.forgotpwdHash = forgotpwdHash;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="forgotpwdExpiryDate")
	public Date getForgotpwdExpiryDate() {
		return forgotpwdExpiryDate;
	}

	public void setForgotpwdExpiryDate(Date forgotpwdExpiryDate) {
		this.forgotpwdExpiryDate = forgotpwdExpiryDate;
	}



	private Set<TblOfficer> tblOfficer = new HashSet<TblOfficer>();
	@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblUserlogin")          
	public Set<TblOfficer> getTblOfficer()
    {
        return tblOfficer;
    }
    public void setTblOfficer(Set<TblOfficer> tblOfficer)
    {
        this.tblOfficer = tblOfficer;
    }
    
    private Set<TblBidder> tblBidder = new HashSet<TblBidder>();
	@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblUserlogin")          
	public Set<TblBidder> getTblBidder()
    {
        return tblBidder;
    }
    public void setTblBidder(Set<TblBidder> tblBidders)
    {
        this.tblBidder = tblBidders;
    }
	
    

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(userId);
        sb.append("]:"); 
        sb.append(createdby);
        sb.append("|");
        sb.append(datecreated);
        sb.append("|");
        sb.append(datemodified);
        sb.append("|");
        sb.append(failedattempt);
        // attribute 'loginid' not usable (type = String Long Text)
        sb.append("|");
        sb.append(modifiedby);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(salt);
        sb.append("|");
        sb.append(cstatus);
        return sb.toString(); 
    }

}
